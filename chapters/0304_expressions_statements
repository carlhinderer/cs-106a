-------------------------------------------------
CHAPTERS 3-4 - EXPRESSIONS & STATEMENTS
-------------------------------------------------

- Java Primitive Types

    byte        8-bit integers
    short       16-bit integers
    int         32-bit integers
    long        64-bit integers

    float       32-bit floating point
    double      64-bit floating point

    char        16-bit Unicode-encoded character
    boolean     true or false


    Arithmetic operators: + - * / %
    Relational operators: == != < > <= >=
    Logical operators: && || !
    Shorthand operators: += -= *= /= %= ++ --



- Numerical Features

    // Named constants
    private static final double PI = 3.141592653589


    // Integer division
    >>> 9 / 4
    2

    >>> 9 % 4
    1


    // Truncation with explicit type casting
    >>> int n = (int) 1.9999;
    >>> n
    1



- DeMorgan's Laws

    !(p || q)     IS EQUIVALENT TO      !p && !q

    !(p && q)     IS EQUIVALENT TO      !p || !q



- Statement Forms

    // For loop
    for (int i=0; i<N; i++) {
        ...
    }


    // While loop
    while (true) {
        ...
        if (value == SENTINEL) break;
        ...
    }


    // If/else statement
    if (n > 0) {
        println("Number is positive");
    } else if (n == 0) {
        println("Number is zero");
    } else {
        println("Number is negative");
    }


    // Ternary ?:
    max = (x > y) ? x : y


    // Switch statement
    switch(n) {
        case 1:
            println("Ace");
            break;
        case 11: 
            println("Jack");
            break;
        case 12:
            println("Queen");
            break;
        case 13:
            println("King");
            break;
        default:
            println(n);
            break;
    }